// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: proto/rpc.proto

package bridge_pb

import (
	rpc "github.com/koinos/koinos-proto-golang/koinos/rpc"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetEthereumTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
}

func (x *GetEthereumTransactionRequest) Reset() {
	*x = GetEthereumTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEthereumTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEthereumTransactionRequest) ProtoMessage() {}

func (x *GetEthereumTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEthereumTransactionRequest.ProtoReflect.Descriptor instead.
func (*GetEthereumTransactionRequest) Descriptor() ([]byte, []int) {
	return file_proto_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *GetEthereumTransactionRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type GetEthereumTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *GetEthereumTransactionResponse) Reset() {
	*x = GetEthereumTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEthereumTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEthereumTransactionResponse) ProtoMessage() {}

func (x *GetEthereumTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEthereumTransactionResponse.ProtoReflect.Descriptor instead.
func (*GetEthereumTransactionResponse) Descriptor() ([]byte, []int) {
	return file_proto_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *GetEthereumTransactionResponse) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type BridgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//	*BridgeRequest_Reserved
	//	*BridgeRequest_GetEthereumTransaction
	Request isBridgeRequest_Request `protobuf_oneof:"request"`
}

func (x *BridgeRequest) Reset() {
	*x = BridgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BridgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BridgeRequest) ProtoMessage() {}

func (x *BridgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BridgeRequest.ProtoReflect.Descriptor instead.
func (*BridgeRequest) Descriptor() ([]byte, []int) {
	return file_proto_rpc_proto_rawDescGZIP(), []int{2}
}

func (m *BridgeRequest) GetRequest() isBridgeRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *BridgeRequest) GetReserved() *rpc.ReservedRpc {
	if x, ok := x.GetRequest().(*BridgeRequest_Reserved); ok {
		return x.Reserved
	}
	return nil
}

func (x *BridgeRequest) GetGetEthereumTransaction() *GetEthereumTransactionRequest {
	if x, ok := x.GetRequest().(*BridgeRequest_GetEthereumTransaction); ok {
		return x.GetEthereumTransaction
	}
	return nil
}

type isBridgeRequest_Request interface {
	isBridgeRequest_Request()
}

type BridgeRequest_Reserved struct {
	Reserved *rpc.ReservedRpc `protobuf:"bytes,1,opt,name=reserved,proto3,oneof"`
}

type BridgeRequest_GetEthereumTransaction struct {
	GetEthereumTransaction *GetEthereumTransactionRequest `protobuf:"bytes,2,opt,name=get_ethereum_transaction,json=getEthereumTransaction,proto3,oneof"`
}

func (*BridgeRequest_Reserved) isBridgeRequest_Request() {}

func (*BridgeRequest_GetEthereumTransaction) isBridgeRequest_Request() {}

type BridgeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*BridgeResponse_Reserved
	//	*BridgeResponse_Error
	//	*BridgeResponse_GetEthereumTransaction
	Response isBridgeResponse_Response `protobuf_oneof:"response"`
}

func (x *BridgeResponse) Reset() {
	*x = BridgeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BridgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BridgeResponse) ProtoMessage() {}

func (x *BridgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BridgeResponse.ProtoReflect.Descriptor instead.
func (*BridgeResponse) Descriptor() ([]byte, []int) {
	return file_proto_rpc_proto_rawDescGZIP(), []int{3}
}

func (m *BridgeResponse) GetResponse() isBridgeResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *BridgeResponse) GetReserved() *rpc.ReservedRpc {
	if x, ok := x.GetResponse().(*BridgeResponse_Reserved); ok {
		return x.Reserved
	}
	return nil
}

func (x *BridgeResponse) GetError() *rpc.ErrorResponse {
	if x, ok := x.GetResponse().(*BridgeResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *BridgeResponse) GetGetEthereumTransaction() *GetEthereumTransactionResponse {
	if x, ok := x.GetResponse().(*BridgeResponse_GetEthereumTransaction); ok {
		return x.GetEthereumTransaction
	}
	return nil
}

type isBridgeResponse_Response interface {
	isBridgeResponse_Response()
}

type BridgeResponse_Reserved struct {
	Reserved *rpc.ReservedRpc `protobuf:"bytes,1,opt,name=reserved,proto3,oneof"`
}

type BridgeResponse_Error struct {
	Error *rpc.ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

type BridgeResponse_GetEthereumTransaction struct {
	GetEthereumTransaction *GetEthereumTransactionResponse `protobuf:"bytes,3,opt,name=get_ethereum_transaction,json=getEthereumTransaction,proto3,oneof"`
}

func (*BridgeResponse_Reserved) isBridgeResponse_Response() {}

func (*BridgeResponse_Error) isBridgeResponse_Response() {}

func (*BridgeResponse_GetEthereumTransaction) isBridgeResponse_Response() {}

var File_proto_rpc_proto protoreflect.FileDescriptor

var file_proto_rpc_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x1a, 0x14, 0x6b, 0x6f, 0x69, 0x6e, 0x6f,
	0x73, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x49, 0x0a, 0x20, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x74, 0x68, 0x65, 0x72,
	0x65, 0x75, 0x6d, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x5a,
	0x0a, 0x21, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb9, 0x01, 0x0a, 0x0e, 0x62,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x72, 0x70, 0x63, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x64, 0x12, 0x64, 0x0a, 0x18, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x74, 0x68,
	0x65, 0x72, 0x65, 0x75, 0x6d, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x2e, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x16, 0x67, 0x65, 0x74, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xf0, 0x01, 0x0a, 0x0f, 0x62, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6b,
	0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x64, 0x5f, 0x72, 0x70, 0x63, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x65, 0x0a, 0x18, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x74,
	0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x16, 0x67, 0x65, 0x74, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65,
	0x75, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x72, 0x6f,
	0x65, 0x2f, 0x6b, 0x6f, 0x69, 0x6e, 0x6f, 0x73, 0x2d, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2d,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_rpc_proto_rawDescOnce sync.Once
	file_proto_rpc_proto_rawDescData = file_proto_rpc_proto_rawDesc
)

func file_proto_rpc_proto_rawDescGZIP() []byte {
	file_proto_rpc_proto_rawDescOnce.Do(func() {
		file_proto_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_rpc_proto_rawDescData)
	})
	return file_proto_rpc_proto_rawDescData
}

var file_proto_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_rpc_proto_goTypes = []interface{}{
	(*GetEthereumTransactionRequest)(nil),  // 0: bridge.get_ethereum_transaction_request
	(*GetEthereumTransactionResponse)(nil), // 1: bridge.get_ethereum_transaction_response
	(*BridgeRequest)(nil),                  // 2: bridge.bridge_request
	(*BridgeResponse)(nil),                 // 3: bridge.bridge_response
	(*Transaction)(nil),                    // 4: bridge.transaction
	(*rpc.ReservedRpc)(nil),                // 5: koinos.rpc.reserved_rpc
	(*rpc.ErrorResponse)(nil),              // 6: koinos.rpc.error_response
}
var file_proto_rpc_proto_depIdxs = []int32{
	4, // 0: bridge.get_ethereum_transaction_response.transaction:type_name -> bridge.transaction
	5, // 1: bridge.bridge_request.reserved:type_name -> koinos.rpc.reserved_rpc
	0, // 2: bridge.bridge_request.get_ethereum_transaction:type_name -> bridge.get_ethereum_transaction_request
	5, // 3: bridge.bridge_response.reserved:type_name -> koinos.rpc.reserved_rpc
	6, // 4: bridge.bridge_response.error:type_name -> koinos.rpc.error_response
	1, // 5: bridge.bridge_response.get_ethereum_transaction:type_name -> bridge.get_ethereum_transaction_response
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_proto_rpc_proto_init() }
func file_proto_rpc_proto_init() {
	if File_proto_rpc_proto != nil {
		return
	}
	file_proto_bridge_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEthereumTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEthereumTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BridgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BridgeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_rpc_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*BridgeRequest_Reserved)(nil),
		(*BridgeRequest_GetEthereumTransaction)(nil),
	}
	file_proto_rpc_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*BridgeResponse_Reserved)(nil),
		(*BridgeResponse_Error)(nil),
		(*BridgeResponse_GetEthereumTransaction)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_rpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_rpc_proto_goTypes,
		DependencyIndexes: file_proto_rpc_proto_depIdxs,
		MessageInfos:      file_proto_rpc_proto_msgTypes,
	}.Build()
	File_proto_rpc_proto = out.File
	file_proto_rpc_proto_rawDesc = nil
	file_proto_rpc_proto_goTypes = nil
	file_proto_rpc_proto_depIdxs = nil
}
